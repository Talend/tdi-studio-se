<%@ jet
imports="
        org.talend.core.model.process.INode
        org.talend.designer.codegen.config.CodeGeneratorArgument
        org.talend.core.model.process.ElementParameterParser
        org.talend.core.model.process.IConnection
        org.talend.core.model.process.IConnectionCategory
        java.util.List
"
%>
    <%@ include file="@{org.talend.designer.components.localprovider}/components/templates/Log4j/Log4jFileUtil.javajet"%>
    <%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();
    boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
    String authMode = ElementParameterParser.getValue(node,"__AUTH_MODE__");
    List< ? extends IConnection> conns = node.getOutgoingSortedConnections();
    if (conns != null){
        if (conns.size()>0){
            IConnection conn =conns.get(0);
            String connName = conn.getName();
            if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
                if (authMode.equals("OAUTH") || authMode.equals("TOKEN")) {
                %>
                    }
                    pageToken_<%=cid%> = queryResultsResponse_<%=cid %>.getPageToken();
                    if (null == pageToken_<%=cid%>) {
                        break;
                    }
                }
            }
                <%
                } else if (authMode.equals("SERVICEACCOUNT")) {
                %>
                    }
                    if (child_statistics_<%=cid%> != null) {
                        globalMap.put("<%=cid%>_STATISTICS_CHILD", child_statistics_<%=cid%>.stream().collect(java.util.stream.Collectors.joining(",", "{\"statistics\": [", "]}")));
                    }
                }

                <%
                } else {
                    throw new IllegalArgumentException("authentication mode should be either \"SERVICEACCOUNT\" or \"OAUTH\"or \"TOKEN\", but it is " + authMode);
                }
                log4jFileUtil.retrievedDataNumberInfo(node);
// Else job has finished successfully with the results. Finish }.
                if (!authMode.equals("SERVICEACCOUNT")) {
                    %>
                    }
                    <%
                }
            }
        }
    }
                if (authMode.equals("SERVICEACCOUNT")) {
                    %>
                        }
                    } catch (Exception e_<%=cid%>) {
                        globalMap.put("<%=cid%>_ERROR_MESSAGE", e_<%=cid%>.getMessage());
                        throw e_<%=cid%>;
                    }
                    <%
                } else {
        %>
        } catch (Exception e_<%=cid%>) {
            globalMap.put("<%=cid%>_ERROR_MESSAGE", e_<%=cid%>.getMessage());
            <%
            if(isLog4jEnabled){
            %>
                log.error("<%=cid%> - " + e_<%=cid%>.getMessage());
            <%
            } else {
            %>
                System.err.println("<%=cid%> - " + e_<%=cid%>.getMessage());
            <%
            }
            %>
        } finally {
            bigQueryUtil_<%=cid%>.cleanup();
        }
    <%
    }
    %>

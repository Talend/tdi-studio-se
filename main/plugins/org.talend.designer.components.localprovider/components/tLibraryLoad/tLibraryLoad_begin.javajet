<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.ElementParameterParser 
		java.util.List
		java.util.Map
	" 
%>

<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();
    List<Map<String, String>> hotLibs = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__HOTLIBS__");
%>

<% if(hotLibs!=null&&hotLibs.size() > 0){%>

String[] libPaths_<%=cid %> = new String[] { <% for(Map<String, String> item : hotLibs) {%> <%=item.get("LIBPATH") %>, <%}%> };

java.util.List<java.net.URL> libURL_<%=cid %> = new java.util.ArrayList<>();

for(String lib_<%=cid %>:libPaths_<%=cid %>) {
	String separator_<%=cid %> = System.getProperty("path.separator");
	String[] jarFiles_<%=cid %> = lib_<%=cid %>.split(separator_<%=cid %>);	
	for(String jarFile_<%=cid %> : jarFiles_<%=cid %>) {
		libURL_<%=cid %>.add( new java.io.File(jarFile_<%=cid %>).toURI().toURL() );
	}
}
java.net.URL[] libURLArray_<%=cid %> = libURL_<%=cid %>.toArray(new java.net.URL[] {});
ClassLoader threadClassLoader_<%=cid %> = Thread.currentThread().getContextClassLoader();
java.net.URLClassLoader newthreadClassLoader_<%=cid %> = new java.net.URLClassLoader(libURLArray_<%=cid %>, threadClassLoader_<%=cid %>);
Thread.currentThread().setContextClassLoader(newthreadClassLoader_<%=cid %>);
<%}%>


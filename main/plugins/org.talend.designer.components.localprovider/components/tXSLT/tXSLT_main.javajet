<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser
    org.talend.designer.codegen.config.CodeGeneratorArgument
	java.util.List
    java.util.Map	
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String xmlFile = ElementParameterParser.getValue(node, "__XML_FILE__");
String xslFile = ElementParameterParser.getValue(node, "__XSLT_FILE__");
String outputFile = ElementParameterParser.getValue(node, "__OUTPUT_FILE__");

List<Map<String, String>> params = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node,"__PARAMS__");
%>
	Object xslFile_<%=cid%> = <%=xslFile%>;
	javax.xml.transform.stream.StreamSource = null;
	if(xslFile_<%=cid%> instanceof java.io.InputStream){
		styleSource<%=cid%> = new javax.xml.transform.stream.StreamSource( (java.io.InputStream)xslFile_<%=cid%>);	
	} else {
		java.io.File xsltFile<%=cid%> = new java.io.File(<%=xslFile%>);
		styleSource<%=cid%> = new javax.xml.transform.stream.StreamSource(xsltFile<%=cid%>);
	}
	javax.xml.transform.Transformer t<%=cid%> = javax.xml.transform.TransformerFactory.newInstance(net.sf.saxon.TransformerFactoryImpl.class.getName(), null).newTransformer(styleSource<%=cid%>);

	<%
	    for (int i = 0; i < params.size(); i++) {
	        Map<String, String> line = params.get(i);
	%>
			t<%=cid%>.setParameter(<%= line.get("NAME") %>, <%= line.get("VALUE") %>);
	<%		
		}
	%>

	Object xmlFile_<%=cid%> = <%=xmlFile%>;
	javax.xml.transform.stream.StreamSource xmlSource<%=cid%> = null;

	if(xmlFile_<%=cid%> instanceof java.io.InputStream){
		xmlSource<%=cid%> = new javax.xml.transform.stream.StreamSource( (java.io.InputStream)xmlFile_<%=cid%>);	
	} else {
		java.io.File xsltFile<%=cid%> = new java.io.File(<%=xslFile%>);
		xmlSource<%=cid%> = new javax.xml.transform.stream.StreamSource(new java.io.File(<%=xmlFile%>));
	}

	t<%=cid%>.transform(xmlSource<%=cid%>, new javax.xml.transform.stream.StreamResult(new java.io.File(<%=outputFile%>)));
		
	if((<%=outputFile%>).indexOf("/") != -1)
	{
		globalMap.put("<%=cid %>_OUTPUT_FILEPATH", (<%=outputFile%>).substring(0,(<%=outputFile%>).lastIndexOf("/")));
		globalMap.put("<%=cid %>_OUTPUT_FILENAME", (<%=outputFile%>).substring((<%=outputFile%>).lastIndexOf("/") + 1));
	}
	else
	{
		globalMap.put("<%=cid %>_OUTPUT_FILEPATH", <%=outputFile%>);
		globalMap.put("<%=cid %>_OUTPUT_FILENAME", <%=outputFile%>);	
	}					
<%@ jet
%>

<%
    String portToConnect = ftpsPort;
%>
    <%@ include file="@{org.talend.designer.components.localprovider}/components/templates/FTP/ftpsTrust.javajet"%>
    javax.net.ssl.SSLContext sslContext_<%=cid %> = null;
    javax.net.ssl.TrustManager[] trustManager_<%=cid %> = null;
    javax.net.ssl.SSLSocketFactory sslSocketFactory_<%=cid %> = null;
    MyTrust_<%=cid%> myTrust_<%=cid%> = null;

    <%@ include file="@{org.talend.designer.components.localprovider}/components/templates/FTP/ftpsPrivateKeyManager.javajet"%>

    try {
        sslContext_<%=cid %> = javax.net.ssl.SSLContext.getInstance("SSL");
        myTrust_<%=cid%> = new MyTrust_<%=cid%>();
        trustManager_<%=cid %> = myTrust_<%=cid%>.getTrustManagers();

        PrivateKeyManager_<%=cid %> privateKeyManager_<%=cid %> = new PrivateKeyManager_<%=cid %>();
        javax.net.ssl.KeyManager[] keyManager_<%=cid %> = privateKeyManager_<%=cid %>.getKeyManagers();

        sslContext_<%=cid %>.init(keyManager_<%=cid %>, trustManager_<%=cid %>, new java.security.SecureRandom());
        sslSocketFactory_<%=cid %> = sslContext_<%=cid %>.getSocketFactory();

        if(("true").equals(System.getProperty("http.proxySet")) ){
            <%@ include file="@{org.talend.designer.components.localprovider}/components/templates/FTP/checkIfProxyHostExcluded.javajet"%>
            if (!isHostIgnored_<%=cid %>) {
                String httpProxyHost = System.getProperty("http.proxyHost");
                int httpProxyPort = Integer.getInteger("http.proxyPort");
                String httpProxyUser = System.getProperty("http.proxyUser");
                String httpProxyPass = System.getProperty("http.proxyPassword");
                ftp_<%=cid %> = new org.talend.ftp.HTTPProxyFTPSClient(<%="IMPLICIT".equals(securityMode)%>, sslContext_<%=cid %>, httpProxyHost, httpProxyPort, httpProxyUser, httpProxyPass);
            } else {
                ftp_<%=cid %> = new org.talend.ftp.SSLSessionReuseFTPSClient(<%="IMPLICIT".equals(securityMode)%>, sslContext_<%=cid %>);
            }
        } else if ("local".equals(System.getProperty("http.proxySet"))) {
            String uriString = <%=host %> + ":" + <%=ftpsPort%>;
            java.net.Proxy proxyToUse = org.talend.proxy.TalendProxySelector.getInstance().getProxyForUriString(uriString);

            if (!proxyToUse.equals(java.net.Proxy.NO_PROXY)) {
                java.net.InetSocketAddress proxyAddress = (java.net.InetSocketAddress) proxyToUse.address();

                String httpProxyHost = proxyAddress.getAddress().getHostAddress();
                int httpProxyPort = proxyAddress.getPort();
                String httpProxyUser = "";
                String httpProxyPass = ""; //leave it empty if proxy creds weren't specified

                org.talend.proxy.ProxyCreds proxyCreds = org.talend.proxy.TalendProxyAuthenticator.getInstance().getCredsForProxyURI(httpProxyHost + ":" + httpProxyPort);
                if (proxyCreds != null) {
                    httpProxyUser = proxyCreds.getUser();
                    httpProxyPass = proxyCreds.getPass();
                }

                ftp_<%=cid %> = new org.talend.ftp.HTTPProxyFTPSClient(<%="IMPLICIT".equals(securityMode)%>, sslContext_<%=cid %>, httpProxyHost, httpProxyPort, httpProxyUser, httpProxyPass);

            } else { //no http proxy for ftp host defined
                ftp_<%=cid %> = new org.talend.ftp.SSLSessionReuseFTPSClient(<%="IMPLICIT".equals(securityMode)%>, sslContext_<%=cid %>);
            }
        } else {
            ftp_<%=cid %> = new org.talend.ftp.SSLSessionReuseFTPSClient(<%="IMPLICIT".equals(securityMode)%>, sslContext_<%=cid %>);
        }

        <%if(isLog4jEnabled){%>
            log.info("<%=cid%> -FTPS security Mode is <%=securityMode%>.");
        <%}%>

        <%@ include file="@{org.talend.designer.components.localprovider}/components/templates/FTP/commons_net_create_connection.javajet"%>
        ftp_<%=cid %>.setRemoteVerificationEnabled(<%=useRemoteVerification %>);
<%
        if (protectionBufferSize != null && !protectionBufferSize.isEmpty() ) {
%>
            ftp_<%=cid %>.execPBSZ(<%=protectionBufferSize %>);
<%
        }

        if (protectionLevel != null && !protectionLevel.isEmpty()) {
%>
            ftp_<%=cid %>.execPROT(<%=protectionLevel %>);
<%
        }
%>
    } catch (Exception e) {
        <%if(isLog4jEnabled){%>
            log.error("<%=cid%> - Can't create connection: " + e.getMessage());
        <%}%>
        throw e;
    }

<%
    if ("PASSIVE".equals(connectMode)) {
%>
        ftp_<%=cid %>.enterLocalPassiveMode();
<%
        if (isLog4jEnabled) {
%>
            log.debug("<%=cid%> - Using the passive mode.");
<%
        }
    }
%>
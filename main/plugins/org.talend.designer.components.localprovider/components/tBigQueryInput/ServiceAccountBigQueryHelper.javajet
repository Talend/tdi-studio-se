<%@ jet
%>
class ServiceAccountBigQueryUtil_<%=cid%> {
	private String projectId;
	private String credentialsFile;
	private com.google.cloud.bigquery.BigQuery bigQuery;
	private boolean useLargeResult;
	private String tempDataSet;
	private String tempTable;

	public ServiceAccountBigQueryUtil_<%=cid%>(String projectId, String credentialsFile, String resultSizeType, String tempDataSet) {
		this.projectId = projectId;
		this.credentialsFile = credentialsFile;
		this.useLargeResult = "LARGE".equals(resultSizeType);
		this.tempDataSet = tempDataSet;
	}

	private com.google.cloud.bigquery.BigQuery buildBigQuery() throws java.io.IOException {
		com.google.auth.oauth2.GoogleCredentials credentials_<%=cid%>;
		java.io.File credentialsFile_<%=cid%> = new java.io.File(credentialsFile);
		try(java.io.FileInputStream credentialsStream_<%=cid%> = new java.io.FileInputStream(credentialsFile_<%=cid%>)) {
			credentials_<%=cid%> = com.google.auth.oauth2.ServiceAccountCredentials.fromStream(credentialsStream_<%=cid%>);
		}

		<% if(isLog4jEnabled) { %>
			log.info("<%=cid%> - query " + <%=query%>);
		<% } %>

		com.google.cloud.bigquery.BigQuery bigquery_<%=cid%> = com.google.cloud.bigquery.BigQueryOptions.newBuilder()
			.setCredentials(credentials_<%=cid%>)
			.setProjectId(projectId)
			.build()
			.getService();

		return bigquery_<%=cid%>;
	}

	private com.google.cloud.bigquery.Job buildJob(com.google.cloud.bigquery.BigQuery bigquery, com.google.cloud.bigquery.QueryJobConfiguration.Builder queryConfiguration, com.google.cloud.bigquery.JobId jobId) throws InterruptedException {
		com.google.cloud.bigquery.Job job_<%=cid%> = bigquery.create(com.google.cloud.bigquery.JobInfo.newBuilder(queryConfiguration.build()).setJobId(jobId).build());

		<% if(isLog4jEnabled) {	%>
		log.info("<%=cid%> - Sending job " + jobId + " with query: " + <%=query%>);
		<% } %>

		job_<%=cid%> = job_<%=cid%>.waitFor();

		if (job_<%=cid%> == null) {
			throw new RuntimeException("Job no longer exists");
		} else if (job_<%=cid%>.getStatus().getError() != null) {
			throw new RuntimeException(job_<%=cid%>.getStatus().getError().toString());
		}

		<% if(isLog4jEnabled) { %>
			log.info("<%=cid%> - Job " + jobId + " finished successfully.");
		<% } %>

		return job_<%=cid%>;
	}

	private com.google.cloud.bigquery.Job executeQuerySmallResult(String query, boolean useLegacySql) throws java.io.IOException, InterruptedException {
		bigQuery = buildBigQuery();
		com.google.cloud.bigquery.QueryJobConfiguration.Builder queryConfiguration_<%=cid%> = com.google.cloud.bigquery.QueryJobConfiguration.newBuilder(query).setUseLegacySql(useLegacySql);
		com.google.cloud.bigquery.JobId jobId_<%=cid%> = com.google.cloud.bigquery.JobId.of(projectId, java.util.UUID.randomUUID().toString());
		return buildJob(bigQuery, queryConfiguration_<%=cid%>, jobId_<%=cid%>);
	}

	private com.google.cloud.bigquery.Job executeQueryLargeResult(String query, boolean useLegacySql) throws java.io.IOException, InterruptedException {
		bigQuery= buildBigQuery();
		com.google.cloud.bigquery.QueryJobConfiguration.Builder queryConfiguration_<%=cid%> = com.google.cloud.bigquery.QueryJobConfiguration.newBuilder(query).setUseLegacySql(useLegacySql);

		<%if (isCustomTemporaryName) {%>
			String tempDataset_<%=cid%> = tempDataSet;
		<%            if(isLog4jEnabled){	%>
			log.info("<%=cid%> - temporary Dataset name : " + tempDataset_<%=cid%>);
		<%
			}
		} else {
		%>
			com.google.cloud.bigquery.QueryJobConfiguration jobConfDryRun_<%=cid%> = queryConfiguration_<%=cid%> .setDryRun(true).build();
			com.google.cloud.bigquery.Job jobDryRun_<%=cid%> = bigQuery.create(com.google.cloud.bigquery.JobInfo.of(jobConfDryRun_<%=cid%>));

			String queryLocation_<%=cid%> =jobDryRun_<%=cid%>.getJobId().getLocation();
			String location_<%=cid%> = queryLocation_<%=cid%> == null ? "US" : queryLocation_<%=cid%>;
			String tempDataset_<%=cid%> = java.util.UUID.randomUUID().toString().replaceAll("-", "")
			+ Integer.toHexString(java.util.concurrent.ThreadLocalRandom.current().nextInt())
			+ Integer.toHexString(java.util.concurrent.ThreadLocalRandom.current().nextInt());

			<% if(isLog4jEnabled){	%>
			log.info("<%=cid%> - query location :" + queryLocation_<%=cid%>);
			log.info("<%=cid%> - temporary dataset location :" + location_<%=cid%>);
			log.info("<%=cid%> - temporary Dataset name : " + tempDataset_<%=cid%>);

			<% } %>

			com.google.cloud.bigquery.DatasetInfo datasetInfo_<%=cid%> = com.google.cloud.bigquery.DatasetInfo.newBuilder(tempDataset_<%=cid%>).setLocation(location_<%=cid%>).build();
			com.google.cloud.bigquery.Dataset dataset_<%=cid%> = bigQuery.create(datasetInfo_<%=cid%>);
		<%
		}
		%>
		tempTable = java.util.UUID.randomUUID().toString().replaceAll("-", "")
		+ Integer.toHexString(java.util.concurrent.ThreadLocalRandom.current().nextInt())
		+ Integer.toHexString(java.util.concurrent.ThreadLocalRandom.current().nextInt());
		<% if(isLog4jEnabled){	%>
			log.info("<%=cid%> - temporary table name : " + tempTable);
		<%
			}
		%>
		queryConfiguration_<%=cid%>
			.setDryRun(false)
			.setAllowLargeResults(true)
			.setDestinationTable(com.google.cloud.bigquery.TableId.of(tempDataset_<%=cid%>, tempTable));

		com.google.cloud.bigquery.JobId jobId_<%=cid%>  = com.google.cloud.bigquery.JobId
			.newBuilder().setProject(<%=projectId%>)
			.setJob(java.util.UUID.randomUUID().toString())
			.build();

		<% if(isLog4jEnabled){ %>
			log.info("<%=cid%> - job location : " + jobId_<%=cid%>.getLocation());
		<% } %>
		return buildJob(bigQuery, queryConfiguration_<%=cid%>, jobId_<%=cid%>);
	}

	public com.google.cloud.bigquery.Job executeQuery(String query, boolean useLegacySql) throws Exception {

		com.google.cloud.bigquery.Job job_<%=cid%>;

		if (useLargeResult) {
			job_<%=cid%> = executeQueryLargeResult(query, useLegacySql);
		} else {
			try {
				job_<%=cid%> = executeQuerySmallResult(query, useLegacySql);
			} catch (com.google.cloud.bigquery.BigQueryException e) {
				job_<%=cid%> = executeQueryLargeResult(query, useLegacySql);
				useLargeResult = true;
			}
		}
		return job_<%=cid%>;
	}

	public void cleanup() throws Exception {
		if(useLargeResult){
<%
			if (isCustomTemporaryName) {
%>
				bigQuery.delete(com.google.cloud.bigquery.TableId.of(tempDataSet, tempTable));
<%
			} else {
%>
				com.google.cloud.bigquery.DatasetId datasetId_<%=cid%> = com.google.cloud.bigquery.DatasetId.of(projectId, tempDataSet);
				bigQuery.delete(datasetId_<%=cid%>, com.google.cloud.bigquery.BigQuery.DatasetDeleteOption.deleteContents());
<%
			}%>
		}
	}

}